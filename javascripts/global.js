// Generated by CoffeeScript 1.6.3
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

require(['backbone'], function(Backbone) {
  var GlobalView, _ref;
  GlobalView = (function(_super) {
    __extends(GlobalView, _super);

    function GlobalView() {
      this.toggleBookmark = __bind(this.toggleBookmark, this);
      this.performLoaded = __bind(this.performLoaded, this);
      _ref = GlobalView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    GlobalView.prototype.initialize = function() {
      console.debug("GLOBAL: Initializing.");
      this.settings = safari.extension.secureSettings;
      if (!this.settings.host) {
        this.settings.host = "fetching.io";
      }
      this.extension = safari.extension;
      this.starButton = this.extension.toolbarItems[0];
      safari.application.addEventListener("message", this.performLoaded, true);
      return safari.application.addEventListener("command", this.toggleBookmark, false);
    };

    GlobalView.prototype.performLoaded = function(e) {
      var _this = this;
      if (e.name !== "page-loaded") {
        return;
      }
      if (!this.settings.accessToken || this.settings.indexingPaused === true) {
        return;
      }
      console.debug("GLOBAL: Posting page contents.");
      return $.ajax({
        method: 'POST',
        url: "http://" + this.settings.host + "/documents",
        data: {
          body: e.message.body,
          title: e.message.title,
          token: safari.extension.secureSettings.accessToken,
          url: e.message.url
        },
        success: function(document) {
          _this.document = document;
          return _this.setBookmarked();
        },
        error: function(err) {
          return console.error('GLOBAL: Error saving document: ', err);
        }
      });
    };

    GlobalView.prototype.toggleBookmark = function(e) {
      var _this = this;
      if (e.command !== "bookmark") {
        return;
      }
      return $.ajax({
        method: 'PUT',
        data: {
          token: this.settings.accessToken
        },
        url: "http://" + this.settings.host + "/documents/" + this.document._id + "/bookmark",
        success: function(document) {
          _this.document = document;
          return _this.setBookmarked();
        },
        error: function(err) {
          return console.error('GLOBAL: Error bookmarking document: ', err);
        }
      });
    };

    GlobalView.prototype.setBookmarked = function() {
      return this.starButton.image = this.document.bookmarked ? this.extension.baseURI + 'star-full.png' : this.extension.baseURI + 'star-empty.png';
    };

    return GlobalView;

  })(Backbone.View);
  return new GlobalView;
});
